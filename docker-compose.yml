version: '3.8'

services:
  # CouchDB Database
  couchdb:
    image: couchdb:3.3
    container_name: listsorter-couchdb
    environment:
      - COUCHDB_USER=${COUCHDB_ADMIN_USER:-admin}
      - COUCHDB_PASSWORD=${COUCHDB_ADMIN_PASSWORD:-changeme}
    ports:
      - "5984:5984"
    volumes:
      - couchdb-data:/opt/couchdb/data
      - couchdb-config:/opt/couchdb/etc/local.d
    networks:
      - listsorter-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5984/_up"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # CouchDB Configuration (runs once to set up CORS)
  couchdb-config:
    image: curlimages/curl:latest
    container_name: listsorter-couchdb-config
    depends_on:
      couchdb:
        condition: service_healthy
    networks:
      - listsorter-network
    environment:
      - COUCHDB_USER=${COUCHDB_ADMIN_USER:-admin}
      - COUCHDB_PASSWORD=${COUCHDB_ADMIN_PASSWORD:-changeme}
    entrypoint: /bin/sh
    command: >
      -c "
      echo 'Waiting for CouchDB to be ready...';
      sleep 5;
      echo 'Configuring CORS...';
      curl -X PUT http://$$COUCHDB_USER:$$COUCHDB_PASSWORD@couchdb:5984/_node/_local/_config/httpd/enable_cors -d '\"true\"';
      curl -X PUT http://$$COUCHDB_USER:$$COUCHDB_PASSWORD@couchdb:5984/_node/_local/_config/cors/origins -d '\"*\"';
      curl -X PUT http://$$COUCHDB_USER:$$COUCHDB_PASSWORD@couchdb:5984/_node/_local/_config/cors/credentials -d '\"true\"';
      curl -X PUT http://$$COUCHDB_USER:$$COUCHDB_PASSWORD@couchdb:5984/_node/_local/_config/cors/methods -d '\"GET, PUT, POST, HEAD, DELETE\"';
      curl -X PUT http://$$COUCHDB_USER:$$COUCHDB_PASSWORD@couchdb:5984/_node/_local/_config/cors/headers -d '\"accept, authorization, content-type, origin, referer\"';
      echo 'CORS configuration complete!';
      "
    restart: "no"

  # Authentication Server
  auth-server:
    build:
      context: .
      dockerfile: Dockerfile.auth-server
    container_name: listsorter-auth-server
    depends_on:
      couchdb:
        condition: service_healthy
    environment:
      - COUCHDB_URL=http://couchdb:5984
      - COUCHDB_ADMIN_USER=${COUCHDB_ADMIN_USER:-admin}
      - COUCHDB_ADMIN_PASSWORD=${COUCHDB_ADMIN_PASSWORD:-changeme}
      - JWT_SECRET=${JWT_SECRET:-change_this_secret_in_production}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-7d}
      - PORT=3001
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-http://localhost:4200,http://localhost}
    ports:
      - "3001:3001"
    networks:
      - listsorter-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Angular Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: listsorter-frontend
    depends_on:
      - auth-server
    ports:
      - "80:80"
    networks:
      - listsorter-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  listsorter-network:
    driver: bridge

volumes:
  couchdb-data:
    driver: local
  couchdb-config:
    driver: local
